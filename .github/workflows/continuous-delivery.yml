name: Java Continuous Delivery

on: 
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    ## Build-Number
    - name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v3
      with:
        token: ${{secrets.GITHUB_TOKEN}}

    ## Configure JDK 1.8 with maven caching
    - name: Set up JDK 1.8
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '8'
        cache: 'maven'

    ## Prepare GPG keyring
    - name: Prepare GPG
      run: |
        export GPG_TTY=$(tty) # needed to successfully run gpg-agent within the container
        echo '${{ secrets.GPG_KEYS }}' | gpg --batch --import
        # echo "# List of assigned trustvalues, created Mo, 25. Nov 2019 12:03:02" | gpg --import-ownertrust
        gpg --list-keys
        
    ## Build with maven
    - name: Set version
      id: version
      if: github.ref == 'refs/heads/master'
      run: |
        export project_version=$(mvn help:evaluate -N -Dexpression=project.version | grep -v '\[' | tail -1 | sed -r -e 's/[-.](snapshot|local)$//i' -e 's/\s+//g')
        export release_version=${project_version}.${{ steps.buildnumber.outputs.build_number }}
        echo ::set-output name=release_version::${release_version}
        echo Truncated version found to be ${project_version}, releasing as ${release_version}
        mvn versions:set -DnewVersion=${release_version} 
      
    - name: Perform build
      run: mvn -B package --file pom.xml
      
    ## Deploy to maven central
    - name: Deploy on maven central
      run: |
        export GPG_TTY=$(tty) # needed to successfully run gpg-agent within the container
        mvn deploy --settings .maven.xml -DskipTests=true -B -U -Prelease
      env:
        # used in .maven.xml
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        
    - name: Notify Developers
      uses: 8398a7/action-slack@v3.18.0
      with:
        username: GitHub
        icon_emoji: octocat
        channel: ci_project
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
        text: Released new version `${{ steps.version.outputs.release_version }}` of *${{ github.repository }}* to maven central
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always()
